<h1>About</h1>
<p>本課程為協同產品設計實習, 每週上課時數為 4 小時, 其中兩小時為教學時段, 另兩小時為實習時段, 課程內容包含 Programming 與 Computer aided Design 等兩大部分.</p>
<p>Programming 部分包含計算機程式與網際內容管理等課程的內容: Brython, Python, Lua 與 C/C++ 等程式的編寫與 Github 整合應用.</p>
<p>Computer aided Design 部分包含電腦輔助設計與實習課程的內容: Solvespace, Siemens NX, Onshape, CoppeliaSim 與 Webots 等套件的應用.</p>
<p>課程評分: 出席, 線上測驗, 協同專案與自我評量.</p>
<p>倉儲: <a href="https://github.com/mdecycu/cd2023">https://github.com/mdecycu/cd2023</a></p>
<p>網站: <a href="https://mde.tw/cd2023">https://mde.tw/cd2023</a></p>
<p><a href="https://teams.microsoft.com/l/team/19%3afKYIzc-yjRJIS0ij4jWQDBLKN7Gkj7cT6CfI6njYDFo1%40thread.tacv2/conversations?groupId=c580abf6-8644-4761-ae2e-969fb8993fd9&amp;tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09">MS Teams</a> (for @nfu users only)</p>
<p>本課程將採兩人一組、四人一組與八人一組的方式進行協同機電整合產品開發.</p>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p>
<h2>Motivation</h2>
<p>學習協同產品設計與實習課程的動機:</p>
<p style="padding-left: 30px;">了解如何在 Web-based 多人協同環境中執行產品開發</p>
<p>課程目標:</p>
<p style="padding-left: 30px;">各分組開發一款能在 web-based CoppeliaSim 場景中, 雙方或多方 (human or computer) 對玩的遊戲 (game) 產品.</p>
<p style="padding-left: 60px;">CoppeliaSim scene on Browser</p>
<p style="padding-left: 60px;">Human to human game</p>
<p style="padding-left: 60px;">Human to computer game</p>
<p style="padding-left: 60px;">Computer to Computer game</p>
<p>Get started: <a href="https://mde.tw/cd2023/content/CoppeliaSim.html">https://mde.tw/cd2023/content/CoppeliaSim.html</a></p>
<hr/>
<p>產品設計 (design) 與產品開發 (development) 有何區別？</p>
<p style="padding-left: 30px;"><a href="https://uk.indeed.com/career-advice/career-development/design-vs-development">https://uk.indeed.com/career-advice/career-development/design-vs-development</a></p>
<p>教導或學習協同產品設計實習的過程, 必須自問學這東西有用嗎? 您自己 (平時, 一直) 使用嗎?</p>
<p>讓我們回到 2012 年, review 一下 Collaborative Product Development 有關的文獻:</p>
<p><a href="https://www.tandfonline.com/doi/full/10.1080/09537287.2010.543169">2012 - Collaborative Product Development - a literature overview</a> (<a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/Eg8gxUiqKM9EjQ1pau4MFnEBXDoqXpvloqDqwoj0o4wWJw?e=ewZV4G">in png </a>for @nfu users only)</p>
<p style="padding-left: 30px;">In a market where competitive pressures surround the industry, organisations face the demand for customised solutions (客製化解題方案), high-quality products, short time-to-market and lower costs.</p>
<p style="padding-left: 30px;">To ensure survival and continued prosperity, businesses must meet these challenges by providing a constant stream (源源不斷) of new and improved products, processes and services. Product Development and innovation emerges consequently as a key process of competition and sustainability (永續).</p>
<p style="padding-left: 30px;">Inter-firm collaborations emerge in order to share product development risks (風險) and costs as well as shorten time-to-market and obtain additional benefits, such as reducing research and development (R&amp;D, 研發) costs, increasing market share and exchanging expertise.</p>
<p style="padding-left: 30px;">Collaborative product development, in brief, can be defined as a collaborative process overlapping (重疊) with the product development process.</p>
<p style="padding-left: 30px;">The existing literature is analysed in three groups (CPD dynamics, partnership formation (夥伴關係組成) in CPD and CPD infrastructure)</p>
<p style="padding-left: 30px;">CPD is "any activity where two (or more) partners contribute differential (不同) resources and know how to agree complementary (互補) aims in order to design and develop a new or improved product"</p>
<p style="padding-left: 30px;">By combining the strength and expertise of the best diverse and geographically dispersed product development teams, better mission scenarios, designs and the corresponding products and technologies can be developed in less time.</p>
<p style="padding-left: 30px;">Applications of Collaborative Product Development include <a href="https://www.entrepreneur.com/starting-a-business/the-5-types-of-business-networking-organizations/302630">networks of companies</a> (拓展公司間成員關係與連結的組織, <a href="https://en.wikipedia.org/wiki/Business_network">business network</a>), <a href="https://www.indeed.com/career-advice/career-development/virtual-organization">virtual organisations</a>, <a href="https://www.thomasnet.com/insights/supplier-collaboration/">customer–supplier collaboration</a>, <a href="https://en.wikipedia.org/wiki/Extended_enterprise">extended (manufacturing) enterprises</a> (延伸企業), <a href="https://www.emerald.com/insight/content/doi/10.1108/JIUC-06-2019-0012/full/pdf?title=the-impact-of-collaboration-network-on-new-product-development-evidence-from-the-automobile-industry-of-china">dynamic networks</a>, <a href="https://harappa.education/harappa-diaries/strategic-alliance-meaning-examples-and-types/">strategic alliances</a> (策略聯盟)and  <a href="https://www.investopedia.com/terms/j/jointventure.asp">joint ventures</a> (合資企業).</p>
<p>同時也看看 <a href="https://www.netsolutions.com/insights/why-collaborative-design-to-build-products/">Why you should pursue collaborative design to build products</a> 以及 <a href="https://collaboration.fandom.com/wiki/Collaborative_product_development">CPD 介紹</a>.</p>
<p style="padding-left: 30px;">Collaborative design involves bringing together a diverse group of people from different backgrounds and industries to work together and generate new ideas. By leveraging (運用) this diverse group’s (多元群組間) unique perspectives and expertise, creating truly unique and effective solutions is possible.</p>
<p style="padding-left: 30px;">An architect (架構師) will think of the software architecture, a designer (設計者) will have an idea of how to make the product usable (能想出方法讓產品可用), the developer (開發者) will know whether the proposed design is feasible (知道提出的設計是否可行), and the stakeholders (股東) will have opinions around the product design to make it invest worthy (確定該產品設計值得投資). Overall, the experience design process is a collaborative initiative undertaken by a product development company, not a one-person or one-team job.</p>
<p style="padding-left: 30px;">Collaborative design typically involves a series of meetings and workshops where stakeholders (利益相關者) can share their ideas and discuss potential solutions to the problems being addressed by the product. This approach ensures that the final product is well-designed, effective, and meets the needs of all stakeholders.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET31veETWFlCiVKtit_5iUoBeVaqndXrPK63zp_hSW3qBg?e=bLEulA">2016 A Framework of Cloud-based Collaborative Platform to Integrate Product Design Requests and Contradiction Analysis</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EduI6ah3kshBgUYfsheMRmYBbcgpKqv52G1SrheoIRZpNA?e=qVTN9B">2017 A Strategic Planning of TRIZ Applications for Cloud-based Collaborative Product Development</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EdBrqxY0LetMvE3_eDgXI2AB19x2ES8byteUrzz7uI3Kyg?e=eHvmx3">2023 Beginner’s Guide to Streamlit with Python</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://streamlit.io">https://streamlit.io</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWOCmilOKM5GncPk82VFsFEBtEwDjvUvXry38NUVUSGiGQ?e=Xa4s3n">2023 Productionizing AI</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETNFWRRktx5EqcB5SCDwKgQBmHD7QuYvwoRksOJcC_WrZA?e=gNGvgl">2023 Industrial Robotics Control Mathematical Models, Software Architecture, and Electronics Design</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETeyIZKK_P1DrahywPaTU7oBCpmfQgKHYFxZPF2lzQSIgA?e=EQCFxV">2023 Computational Mechanics with Deep Learning An Introduction</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EUkEjHFiy4dHqVreKpMnMT0BfKvEik6I8FVoMS3DF591fg?e=7hpjZx">2001 Introduction to Physical Modeling with Modelica</a> (for @nfu users only)</p>
<p><a href="https://ep.liu.se/ecp/096/127/ecp14096127.pdf">Modelica model for a youbot manipulator</a></p>
<p style="padding-left: 30px;"><a href="https://openmodelica.org/doc/OpenModelicaUsersGuide/OpenModelicaUsersGuide-latest.pdf">OpenModelica User Guide</a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/Eb4qE-RpYmFDt76J3BA1BswBvk_fxn-zs82ysR-pJKo5Qw?e=NZ4Ul1">The OpenModelica Integrated Modeling, Simulation and Optimization Environment</a></p>
<p></p>
<h2>Reading</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET59eCPLupBGgIUmBog-yE0BMkL4RdYWNzpBxW-PzvnX1A?e=RKYWbq">1999 How to be a star engineer</a>, <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EQtBbwaFSKdCrnxljlGU9NMBcl70NO4OghYo5caSpLcvcw?e=E9iyjL">如何成為一位傑出的工程師</a> (for @nfu users only)</p>
<p><a href="https://www.tandfonline.com/doi/full/10.1080/09537287.2010.543169">2012 - Collaborative Product Development - a literature overview</a> (<a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/Eg8gxUiqKM9EjQ1pau4MFnEBXDoqXpvloqDqwoj0o4wWJw?e=ewZV4G">in png </a>for @nfu users only)</p>
<p style="padding-left: 30px;">這是一篇長達 20 頁, 有關協同產品開發的文獻探討與概述, 其中牽涉許多與產品開發流程及國際大環境下企業競爭常見的專業用詞 (Terminology), 非常適合機械設計工程師仔細閱讀. 從中可以了解在目前機電資 (Infomechatronic) 與虛實整合 (Cyber-Physical Integration) 產品開發模式下, 每一個參與協同設計的成員或團隊, 除了必須專注在自己的專業領域外, 對於時間與機會成本的掌控, 採行方案的永續性, 理念與創意的展示方法, 以及對於跨領域知識的涉獵, 都是未來進入產業之前就必須要在心態與身體力行中, 不斷調整歷練與實踐.</p>
<p><a href="https://www.netsolutions.com/insights/why-collaborative-design-to-build-products/">Why you should pursue collaborative design to build products</a> 以及 <a href="https://collaboration.fandom.com/wiki/Collaborative_product_development">CPD 介紹</a>.</p>
<p style="padding-left: 30px;">在軟體開發界, 經常會有所謂研究者, 架構師, 開發者與設計者等不同專業任務分工, 其中研究者負責廣泛涉獵各種技術的應用, 架構師則主導公司產品開發的大方向與所採行的技術細節, 開發者則承接架構師所賦予的產品開發任務, 設法找出可行的產品開發方案, 其中包括規劃及管理與產品開發有關的市場導向, 期程與成本規劃等專案細節, 以便讓設計者根據專案計畫中的細項, 解決各種產品開發所面臨的問題.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET31veETWFlCiVKtit_5iUoBeVaqndXrPK63zp_hSW3qBg?e=bLEulA">2016 A Framework of Cloud-based Collaborative Platform to Integrate Product Design Requests and Contradiction Analysis</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EduI6ah3kshBgUYfsheMRmYBbcgpKqv52G1SrheoIRZpNA?e=qVTN9B">2017 A Strategic Planning of TRIZ Applications for Cloud-based Collaborative Product Development</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EdBrqxY0LetMvE3_eDgXI2AB19x2ES8byteUrzz7uI3Kyg?e=eHvmx3">2023 Beginner’s Guide to Streamlit with Python</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETNFWRRktx5EqcB5SCDwKgQBmHD7QuYvwoRksOJcC_WrZA?e=gNGvgl">2023 Industrial Robotics Control Mathematical Models, Software Architecture, and Electronics Design</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETeyIZKK_P1DrahywPaTU7oBCpmfQgKHYFxZPF2lzQSIgA?e=EQCFxV">2023 Computational Mechanics with Deep Learning An Introduction</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EUkEjHFiy4dHqVreKpMnMT0BfKvEik6I8FVoMS3DF591fg?e=7hpjZx">2001 Introduction to Physical Modeling with Modelica</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"></p>
<h2>Projects</h2>
<p>二甲: w2 and w7 放假</p>
<p>二乙: w7 and w18 放假</p>
<p>主題: <span style="background-color: #ffff00;">開發一款能在 web-based CoppeliaSim 場景中雙方或多方 (human or computer) 對玩的遊戲 (game) 產品</span>.</p>
<p>w1-w5: 兩人一組, 根據自選產品在期限內完成產品開發, 以抽點方式在 w4 現場發表兩人協同四週後所完成的產品, 在 w5 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 1 得分？)</p>
<p>w6-w10: 四人一組, 根據自選產品在期限內完成產品開發, 以抽點方式在 w10 現場發表兩人協同四週後所完成的產品, 在 w11 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 2 得分？)</p>
<p>w11-w17: 八人一組, 根據自選產品在期限內完成產品開發, 以抽點方式在 w16 現場發表兩人協同四週後所完成的產品, 在 w17 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 3 得分？)</p>
<p>Test modules (考試題庫模組): 於 w4, w11 與 w16 各組必須針對協同專案執行過程所需了解的議題, 製作符合 TCExam 格式的考試題目, 每人每一階段至少提供 5 個多選題題目, 每一題各有至少 5 個正確敘述與 5 個錯誤敘述.</p>
<p>TCExam tests: 於 w5, w12 與 w17 舉行.</p>
<p>Reference:</p>
<ol>
<li>FoosBall (手足球): <a href="https://youtu.be/ZRW793-cZtc">https://youtu.be/ZRW793-cZtc</a></li>
<li>Ping Pong (乒乓球): <a href="https://youtu.be/l_tzXQC4His">https://youtu.be/l_tzXQC4His</a></li>
<li>Football (足球): <a href="https://youtu.be/cYgDqiKRJ_U">https://youtu.be/cYgDqiKRJ_U</a>, <a href="https://youtu.be/oFV6NyITuhw">https://youtu.be/oFV6NyITuhw</a></li>
<li>Baseball (棒球): <a href="https://youtu.be/KqPlggkBzXI">https://youtu.be/KqPlggkBzXI</a>, <a href="https://www.youtube.com/shorts/4rk8KrtAkzQ">https://www.youtube.com/shorts/4rk8KrtAkzQ</a></li>
<li>Curling (冰壺遊戲): <a href="https://youtu.be/DkYUh5X0ZvM">https://youtu.be/DkYUh5X0ZvM</a></li>
<li><a href="https://www.google.com/search?q=ball+gamehttps://www.youtube.com/results?search_query=ball+game">Ball Game</a></li>
<li><a href="https://www.youtube.com/results?search_query=game">Game</a></li>
<li>Configuring Joints: <a href="https://youtu.be/24eVkpFo_xE">https://youtu.be/24eVkpFo_xE</a></li>
<li>Joint Types: <a href="https://youtu.be/akr7mU-1qoc">https://youtu.be/akr7mU-1qoc</a></li>
<li>Programming Joints: <a href="https://youtu.be/YFpXZN3EKfY">https://youtu.be/YFpXZN3EKfY</a></li>
<li>Joints: <a href="https://youtu.be/YcfARpQVKhU">https://youtu.be/YcfARpQVKhU</a>, <a href="https://youtu.be/rbwWMYwL3rI">https://youtu.be/rbwWMYwL3rI</a></li>
</ol>
<p></p>
<h2>Web-based</h2>
<p>Front-end 使用瀏覽器, Back-end 使用 WWW server 進行機電資協同產品開發</p>
<p><a href="https://link.springer.com/chapter/10.1007/1-84628-088-5_1">Creating Web-based Laboratory</a> (2004)</p>
<p><a href="https://link.springer.com/book/10.1007/978-90-481-2505-0">Web-based Control and Robotics Education</a> (2009)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2710-7">Learning Web-based Virtual Reality</a> (2017)</p>
<h2>Blender</h2>
<p><a href="https://www.blender.org/">https://www.blender.org/</a></p>
<p>Blender history: <a href="https://www.blender.org/about/history/">https://www.blender.org/about/history/</a></p>
<p>Blender on Github: <a href="https://github.com/blender">https://github.com/blender</a></p>
<p>Ebooks on Springer:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-2802-9">The Blender Python API</a> (2017)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-3127-1">Beginning Blender</a> (2010)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6415-7">Core Blender Development</a> (2021)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5340-3">Modeling and Animation using Blender</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6174-3">Creating Game Environment in Blender 3D</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-7954-0">Introduction to Blender 3.0</a> (2022)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-1977-4">Foundation Blender Compositing</a> (2009)</p>
<p>機械設計工程師能拿 Blender 做甚麼?</p>
<p style="padding-left: 30px;"><a href="https://workwut.com/mechanical-engineers-blender/">https://workwut.com/mechanical-engineers-blender/</a></p>
<p style="padding-left: 30px;"><a href="https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering">https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/AD_jyBN09jA">https://youtu.be/AD_jyBN09jA</a></p>
<p style="padding-left: 30px;"><a href="https://blendergrid.com/learn/articles/tyler-disney-interview">https://blendergrid.com/learn/articles/tyler-disney-interview</a></p>
<h2>Ref</h2>
<p>2014</p>
<p style="padding-left: 30px;"><a href="https://github.com/coursemdetw?tab=repositories">https://github.com/coursemdetw?tab=repositories</a></p>
<p style="padding-left: 30px;">2014 cp: <a href="https://vimeo.com/115314619">https://vimeo.com/115314619</a></p>
<p style="padding-left: 30px;"><a href="https://vimeo.com/user24079973">https://vimeo.com/user24079973</a></p>
<p>2015</p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw?tab=repositories">https://github.com/2015fallhw?tab=repositories</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw/cdw2">https://github.com/2015fallhw/cdw2</a></p>
<p style="padding-left: 30px;"><a href="https://2015cdg11.wordpress.com/">https://2015cdg11.wordpress.com/</a></p>
<p>2017</p>
<p style="padding-left: 30px;"><a href="https://40423245.github.io/2017springcd_hw/blog/pages/about/">https://40423245.github.io/2017springcd_hw/blog/pages/about/</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos</a></p>
<p>2018</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecadp2018">https://github.com/mdecadp2018</a></p>
<p style="padding-left: 30px;"><a href="https://scrum-1.gitbooks.io/cd2018/content/cd.html">https://scrum-1.gitbooks.io/cd2018/content/cd.html</a></p>
<p style="padding-left: 30px;"><a href="https://www.ithome.com.tw/news/125308">https://www.ithome.com.tw/news/125308</a></p>
<p>2019</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdekmol">https://github.com/mdekmol</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/cd2019a">https://github.com/scrum-1/cd2019a</a> </p>
<p>2020</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a></p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2020">https://gitter.im/mdecourse/cad2020</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2020">https://gitter.im/mdecourse/cd2020</a></p>
<p>2021</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2021">https://gitter.im/mdecourse/cp2021</a></p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2021">https://gitter.im/mdecourse/cad2021</a></p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/videos">https://www.youtube.com/@user-yb6kb6je7f/videos</a></p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/playlists">https://www.youtube.com/@user-yb6kb6je7f/playlists</a></p>
<p>2022:</p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2022">http://wcm.cycu.org:88/github/cd2022</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/cd2022_guide/">http://wcm.cycu.org:88/github/cd2022_guide/</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2022">https://gitter.im/mdecourse/cd2022</a> </p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/Eaet-FSzsUxNnHZc7MalNHIB98t3CSaoNxu1VJZn6l6r_w?e=wvnC8b">cd2022_w13_2a_part1.mp4</a> (18:17 有關電腦的規劃與相關套件)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EVanG_5ZabVAgo113lurTN8B3yc0SkQAjcFzPLyVuQm1SQ?e=4zcxT2">cd2022_w13_2a_part2.mp4</a> (33:37 <a href="https://www.ufactory.cc/uarm-collaborative-robot">uArm</a> 機械手臂 NX 模型介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/Ec5oEcyAJjhAsH2HXPDGjJYBjQn0XR2diwfNRYBO4RWjQw?e=MCuu9V">cd2022_w13_2a_part3.mp4</a> (28:21 <a href="https://leo-editor.github.io/leo-editor/">Leo Editor</a> (含 importer) 在 parse xml 的使用介紹)</p>
<p style="padding-left: 60px;">節點標題指令: @auto, @clean, @edit</p>
<p style="padding-left: 60px;">CoppeliaSim parse STL 組立件檔案與座標轉換與縮放</p>
<p style="padding-left: 60px;">CoppeliaSim Python scripting</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EcmwzqLi1_FEgyi7Gh3vOb8Bs8-sYipdc1YT1_aLAJpFZg?e=CsfrpK">cd2022_w13_2b_part1.mp4</a> (24:05 NX and CoppeliaSim 應用說明)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EegXPYSdUGJItXCyCsTtne8BkwGSC0JFhCgyC4tFEplhbw?e=DxvWhW">cd2022_w13_2b_part2.mp4</a> (18:27 <a href="https://www.ufactory.cc/uarm-collaborative-robot">uArm</a><span><span> </span>機械手臂 NX 模型介紹)</span></p>
<p style="padding-left: 30px;"><span><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EcsSMO-AE7pHkgUbAvklEtAB2GQ0K3rat11hrwHsTfMo2Q?e=tak1ir">cd2022_w13_2b_part3.mp4</a> (7:47 利用 Brython 擷取建立學員網站連結)</span></p>
<p style="padding-left: 30px;"><span><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/Ecopa9SwJLRKjUFgcwhxN1cBhiRhdoofVze7uaej1biSoQ?e=Z3cqwW">cd2022_w14_2a_part1.mp4</a> (19:33 CoppeliaSim 4.3.0 Python Scripting 與場景介紹)</span></p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EZmR6LtoSDtMvao7vZSnFZcBtj9SvKdCbq_1JrWrkLg_FA?e=nlmXat">cd2022_w14_2a_part2.mp4</a> (32:54 NX 零組件轉入 CoppeliaSim 建立 MTB robot 場景介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/ETX2jSd9XYtDoXIETeFtonIBlANT-o3Bj_wRCfuqv96b6Q?e=APkloB">cd2022_w14_2a_part3.mp4</a> (26:27 uArm 機械手臂參數化零組件設計繪圖與網站解決衝突)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EUXfX4gfanBLhsgFnOnenYABNzeeX8FFTcj0pRdm_2eedw?e=ZOGOve">cd2022_w14_2b_part1.mp4</a> (23:14 CoppeliaSim Lua 與 Python Scripting 介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EYN-ut16-J5CkHxzYFYLUaMBPfS00v6H_gryMV7M7jf2Vg?e=hAqKa8">cd2022_w14_2b_part2.mp4</a> (33:08 建立 CoppeliaSim MTB robot 場景介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EflGSj2elMBNgIVHrkgt06EBBwbKTuYuURQwaJ52F0oAtA?e=5VBXTR">cd2022_w14_2b_part3.mp4</a> (34:45 MTB robot 場景與 scripting 程式介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EWiMlDXDZqFEoxKsC_0TjYkBWfl0QZkF3CNt4AiQUiRRnw?e=9vgmNz">cd2022_w15_2a.mp4</a> (55:30 Mac 執行 CoppeliaSim, 協同設計考量, Ruckig.com 介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/ERDFYmadsZ5KhaRkVpR_2RcB5Yp32IWA2jIzYR8JJXf07g?e=6NFu1X">cd2022_w15_2b.mp4</a> (31:25 uArm robot 場景介紹, IK 運算, Feedback 與多 port 控制)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EVUL6Znkh4lBotbIwlu_44cBS4BgB1FKh-q-LxunAh8BeA?e=yEC9Na">planar_2_link_robot_IK_part1.mp4</a> (5:24 for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EW9YY-AUze9FoOiW5Ucu21EB3ukrnfB10jYWNrNR_QRR2Q?e=UBCnNV">planar_2_link_robot_IK_part2.mp4</a> (3:03 for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EUwNAye6JFpPguKJWah5YGABw5hy8Qauw_q7uPi3tEXBIQ?e=JFzZ21">cd2022_w16_2a_part1.mp4</a> (40:22 tkinter GUI robot 控制, CoppeliaSim remote API 介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EQTXNSqF66VEgHQ2soJnpJkBQuUOd2XmhlxHdqo0z9qOfQ?e=B3SXa1">cd2022_w16_2a_part2.mp4</a> (21:18 remote API 控制與 Image sensor 串流)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EXvM9GXD59pDnTEO3YjExjgBbocw7THoe5T0Tw2e1ymeUA?e=rnmwZN">Planar 3R IK.mp4</a> (5:18 for @nfu user only)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EbAlwOD__R9Etqr8HHE4xz4ByKnfEU3JxHKr2z5oMZs9qw?e=8z1s6j">cd2022_w16_2b_part1.mp4</a> (20:26 CoppeliaSim remote API 與場景影像串流介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/ET5nXVwHyCFJmv0J4mQNteIBUHnw49USZN9uTWwh_KORVg?e=FSWSQM">cd2022_w16_2b_part2.mp4</a> (41:03 協同場景控制, 場景影像串流介紹)</p>
<p style="padding-left: 30px;"><a href="https://gmnfuedutw-my.sharepoint.com/:v:/g/personal/yen_gm_nfu_edu_tw/EdxLGcSqPupOqk-re8LdhkEBHh7vc8VWjdr1cnuKfqLr5g?e=G8IKv8">cd2022_w16_2b_part3.mp4</a> (26:22 4.3.0 CoppliaSim Visualizaton stream 功能介紹)</p>
<p style="padding-left: 30px;"><a href="https://classroom.github.com/classrooms/112770776-2022-fall-classroom/assignments/site">cp2022 計算機程式 site</a></p>
<p style="padding-left: 30px;"><a href="https://classroom.github.com/classrooms/112770799-2022-fall-classroom/assignments/site">cad2022 電腦輔助設計與實習 site</a></p>
<p style="padding-left: 30px;"></p>
<h1>Topics</h1>
<p><a href="https://mde.tw/cd2023/content/BubbleRob.html">https://mde.tw/cd2023/content/BubbleRob.html</a> </p>
<h1>NX2027</h1>
<p><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EclS-NMhqJ9JvCa-pIQ_jMsBQB1tipr_Zgc8kT8ha1kMtg?e=RvnCpR">NX2027.3401_lite_cad2022.7z</a> for @nfu users only</p>
<p>目前 NX 最新版本為 NX2212.3001 (下載檔案為 12.75 GB)</p>
<p style="padding-left: 30px;"><a href="https://docs.sw.siemens.com/en-US/doc/209349590/PL20220512394070742.whatsnew/">What's new in NX2212?</a></p>
<h2>NX Server</h2>
<p>Web based NX2027 Server</p>
<h1>Onshape</h1>
<p><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<p>Onshape Architecture: <a href="https://youtu.be/kPNlzlkBGMA">https://youtu.be/kPNlzlkBGMA</a> </p>
<p style="padding-left: 30px;">影片公開一年後, 只有不到 1200 views, why? 曲高和寡或者嘗試推動 MCAD 前進的<a href="https://www.reddit.com/r/Onshape/comments/w7j31u/any_idea_why_onshape_doesnt_get_a_lot_of/">包袱實在太大</a>?</p>
<p><a href="https://creativecloud.adobe.com/zh-Hant/discover/article/q-and-a-onshape-s-jon-hirschtick">https://creativecloud.adobe.com/zh-Hant/discover/article/q-and-a-onshape-s-jon-hirschtick</a></p>
<p><a href="https://www.engineering.com/story/the-onshape-acquisition-a-closer-look">The Onshape acquisition - a closer look</a></p>
<p><a href="https://www.josh-ua.co/blog/2019/2/13/solidworks-vs-siemens-nx-vs-onshape">https://www.josh-ua.co/blog/2019/2/13/solidworks-vs-siemens-nx-vs-onshape</a></p>
<p>What's new on 01.11, 2023? <a href="https://youtu.be/ND_pwCCjMEQ">https://youtu.be/ND_pwCCjMEQ</a> </p>
<p>如何在 Web-based 環境, 讓 human 與 machine 能夠在<a href="https://cad.onshape.com/documents/f942bc02bd60de603095cd9d/w/e3af941ed5245875e39138d0/e/af657625f78911e9e727c91a?renderMode=0&amp;uiState=638ff3d8cac9b5791419b89c">手足球檯</a>上對陣, 且進球後以最快的方式回到球場.</p>
<p><img caption="false" height="326" src="/images/onshape_foosball_table.png" width="600"/></p>
<h1>Free CAD</h1>
<p>Mechanical computer aided design software with freedom</p>
<p>自由的電腦輔助機械設計軟體</p>
<p><a href="https://www.cadforum.net">https://www.cadforum.net</a></p>
<p><a href="https://forum.freecad.org">https://forum.freecad.org</a></p>
<p><a href="https://www.peerspot.com/categories/cad">https://www.peerspot.com/categories/cad</a></p>
<p>Creo for student: <a href="https://www.ptc.com/en/products/education/free-software/creo-college-download">https://www.ptc.com/en/products/education/free-software/creo-college-download</a></p>
<p>Free AutoDesk Products: <a href="https://www.autodesk.com/education/edu-software/overview">https://www.autodesk.com/education/edu-software/overview</a></p>
<p>IronCAD for free: <a href="https://www.ironcad.com/student/">https://www.ironcad.com/student/</a></p>
<p>Ansys Student Versions: <a href="https://www.ansys.com/academic/students">https://www.ansys.com/academic/students</a></p>
<h2>Solid Edge</h2>
<p><a href="https://solidedge.siemens.com/en/solutions/users/hobbyists-and-makers/">https://solidedge.siemens.com/en/solutions/users/hobbyists-and-makers/</a> </p>
<p><a href="https://solidedge.siemens.com/en/free-software/overview/">https://solidedge.siemens.com/en/free-software/overview/</a> </p>
<p>Solid Edge community edition:</p>
<p style="padding-left: 30px;"><a href="https://www.plm.automation.siemens.com/plmapp/education/solid-edge/zh_tw/free-software/community">https://www.plm.automation.siemens.com/plmapp/education/solid-edge/zh_tw/free-software/community</a> (下載約 4GB, 安裝後佔約 8GB, 授權使用時段: 06-jul-2021 至 31-dec-2025)</p>
<p style="padding-left: 30px;">需要 Windows 10 Enterprise or Professional (64-bit only) version 20H2 or later, Windows 11 Enterprise or Professional version 21H2 or later, <a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/">https://developer.microsoft.com/en-us/microsoft-edge/webview2/</a>, MS .Net Framework 4.8, MS Visual C++ 2015-2019 redistributable X64</p>
<p style="padding-left: 30px;">會同時安裝 <a href="https://www.keyshot.com/">https://www.keyshot.com/</a> 11 版</p>
<p style="padding-left: 30px;">SELicense.lic 位於 Preferences 目錄下</p>
<p style="padding-left: 30px;">No Solid Edge Cloud Gateway</p>
<p style="padding-left: 30px;">圖檔同教育版無法與商業版相容</p>
<p style="padding-left: 30px;">所建立的工程圖會有浮水印</p>
<p style="padding-left: 30px;"><a href="https://docs.sw.siemens.com/en-US/doc/246738425/PL20211001099989437.user_interface">Solid Edge Documentation</a></p>
<p style="padding-left: 30px;"><a href="https://docs.plm.automation.siemens.com/docs/se/2020/api/webframe.html">SE2020 API Documentation</a></p>
<p>與 NX, Onshape 比較:</p>
<p style="padding-left: 30px;">自帶使用授權, 可在不上網情況下使用</p>
<p style="padding-left: 30px;">安裝版 (下載 3.8GB, 安裝後佔 8GB), 適合在自己的電腦或筆電中安裝執行.</p>
<p style="padding-left: 30px;">可攜版 (下載 4.28GB, 解開後佔 9.4GB), 適合在有防寫卡保護的電腦或虛擬主機中使用.</p>
<p style="padding-left: 30px;">功能與 SolidWorks, Onshape 相當, 屬於中級 MCAD</p>
<p>在安裝防寫卡的電腦中使用 Solid Edge 2023:</p>
<ol>
<li>因為系統並未安裝 Solid Edge, 因此可以使用已經安裝 Solid Edge 的 vdi 製作一個虛擬主機後使用</li>
<li>配合 subst 指令, 設法在安裝 MS Edge Webview 與 VC 2015-2019 redistributable 後, import 所需的 .reg 後, 將 install 指令指向 .msi 並且設定 p_schema 與 se_license_server 等環境變數後執行 edge.exe 後啟動. 例如:</li>
</ol>
<p>start_se2023.bat</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=x
subst %Disk%: "data"

set se_license_server=x:\se2023\Preferences\SELicense.lic
set p_schema=x:\se2023\Schema
set sessionname=console
REM set keyshot11=c:\users\public\documents\keyshot 11
set keyshot_external_license_folder=x:\se2023\program

start x:\se2023\program\edge.exe</pre>
<p>stop_se2023.bat</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=x
path=%PATH%;

taskkill /IM edge.exe /F

REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D

EXIT</pre>
<p>若在設定 X 虛擬槽之後, 關閉 Solid Edge 2023 後, 尚未執行 stop_se2023.bat 之前開啟 Solid Edge 2023, 則可以使用下列 start.bat</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">set se_license_server=x:\se2023\Preferences\SELicense.lic
set p_schema=x:\se2023\Schema
set sessionname=console
REM set keyshot11=c:\users\public\documents\keyshot 11
set keyshot_external_license_folder=x:\se2023\program

start x:\se2023\program\edge.exe</pre>
<p></p><h2>Solvespace</h2>
<p><a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a></p>
<p><a href="https://solvespace.com/forum.pl">Solvespace Forum</a></p>
<h2>Pyslvs-UI</h2>
<p><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p>
<h2>FreeCAD</h2>
<p><a href="https://www.freecad.org/">https://www.freecad.org/</a></p>
<p></p>
<h1>CoppeliaSim</h1>
<p><a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<p><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EWdB5MhlZRJKjt5UiNRebR8BN6_AmU0IX1HC7Y6dnRBzQw?e=dLPcDi">Download CoppeliasimEdu_4.3.0rev12.7z</a> (for @nfu users only)</p>
<p><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/Eam0Z9yC4QBOkv3hI17WOWIBh2WXtGTpLxyykiR5PBFOig?e=bOXCwv">Download CoppeliasimEdu_4.4.0rev0.7z</a> (for @nfu users only) - 設定已經移往系統 Registry</p>
<p>Tutorials:</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/bubbleRobTutorial.html">https://mde.tw/pjcopsim/content/bubbleRobTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/buildingAModelTutorial.html">https://mde.tw/pjcopsim/content/buildingAModelTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/lineFollowingBubbleRobTutorial.html">https://mde.tw/pjcopsim/content/lineFollowingBubbleRobTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/inverseKinematicsTutorial.html">https://mde.tw/pjcopsim/content/inverseKinematicsTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/externalControllerTutorial.html">https://mde.tw/pjcopsim/content/externalControllerTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/pluginTutorial.html">https://mde.tw/pjcopsim/content/pluginTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/robotLanguageIntegrationTutorial.html">https://mde.tw/pjcopsim/content/robotLanguageIntegrationTutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/ros1Tutorial.html">https://mde.tw/pjcopsim/content/ros1Tutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/ros2Tutorial.html">https://mde.tw/pjcopsim/content/ros2Tutorial.html</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/pjcopsim/content/compilingCoppeliaSim.html">https://mde.tw/pjcopsim/content/compilingCoppeliaSim.html</a></p>
<h2>BubbleRob</h2>
<p><a href="https://mde.tw/pjcopsim/content/bubbleRobTutorial.html">https://mde.tw/pjcopsim/content/bubbleRobTutorial.html</a> </p>
<p><a href="https://mde.tw/pjcopsim/content/buildingAModelTutorial.html">https://mde.tw/pjcopsim/content/buildingAModelTutorial.html</a> </p>
<p>clean simulation model - nice looking, fast displaying, fast simulating and stable simulation model</p>
<p><a href="https://mde.tw/pjcopsim/content/shapes.html">CoppeliaSim shapes</a>:</p>
<p style="padding-left: 30px;">Simple random shape (any mesh): By default, all imported shapes are simple shapes</p>
<p style="padding-left: 30px;">Compound random shape</p>
<p style="padding-left: 30px;">Simple convex shape: Optimized for dynamics collision response calculation (but pure shapes are recommended)</p>
<p style="padding-left: 30px;">Compound convex shape</p>
<p style="padding-left: 30px;">Pure simple shape: best suited for dynamics collision response calculation</p>
<p style="padding-left: 30px;">Pure compound shape</p>
<p style="padding-left: 30px;">Heightfield shape: can also be considered as pure simple shapes, and are optimized for dynamics collision response calculation</p>
<p style="padding-left: 30px;"></p>
<h1>Webots</h1>
<p><a href="https://www.cyberbotics.com">https://www.cyberbotics.com</a></p>
<p><a href="https://webots.cloud/">https://webots.cloud/</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EcSI1hnHIx1JjZwQDCGk4oIByjVtM4D5-u-jacAj9bXn9g?e=pfaAM6">Download webots_2023a.7z</a> (for @nfu users only)</p>
<h1>Python</h1>
<p>利用以下流程所建立的 Python 3.11.2 可攜套件: <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbT9h2uxP41DhXp6TkYQKNABgtLPvnMq5y781nH5TzeuNQ?e=zW9Hkf">Python311_portable.7z</a> (for @nfu users only)</p>
<h4>何謂可攜式 Python 程式環境?</h4>
<h4 style="padding-left: 30px;">Python 程式是如何執行的?</h4>
<p style="padding-left: 30px;">首先 Python 是一種解譯式 (Interpreted) 程式語言, 與 C 或 C++ 程式語言最大的差別是, C/C++ 程式碼通常必須透過編譯 (Compile) 與連結 (Link) 的過程, 將原始碼轉為可執行的格式 (在 Windows 操作系統為 .exe 檔案), 而 Python 程式寫好後, 可以直接利用解譯器執行, 使用者不需要手動執行程式碼的編譯, 而是由解譯器在執行前即時將程式碼轉換為可執行檔案.</p>
<p style="padding-left: 30px;">在 <a href="https://www.geeksforgeeks.org/internal-working-of-python/">geeksforgeeks 網站</a>, 以下列敘述說明 Python 程式如何執行:</p>
<p style="padding-left: 30px;">Python is an object-oriented programming language like Java. Python is called an interpreted language. Python uses code modules that are interchangeable instead of a single long list of instructions that was standard for functional programming languages. The standard implementation of python is called "cpython". It is the default and widely used implementation of Python.</p>
<p style="padding-left: 30px;">Python doesn’t convert its code into machine code, something that hardware can understand. It actually converts it into something called byte code. So within python, compilation happens, but it’s just not into a machine language. It is into byte code (.pyc or .pyo) and this byte code can’t be understood by the CPU. So we need an interpreter called the python virtual machine to execute the byte codes</p>
<p style="padding-left: 30px;">針對 Python 程式的"編譯"過程, 則<a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/">說明如下</a>:</p>
<p style="padding-left: 30px;">The Python program is converted into byte code. Byte code is a fixed set of instructions that represent arithmetic, comparison, memory operations, etc. It can run on any operating system and hardware. The byte code instructions are created in the .pyc file. The .pyc file is not explicitly created as Python handles it internally but it can be viewed with the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python -m py_compile hello.py</p>
<p style="padding-left: 30px;">-m and py_compile represent module and module name respectively. This module is responsible to generate .pyc file. The compiler creates a directory named  __pycache__ where it stores the hello.cpython-39.pyc file (若採用 Python 3.9 版次的編譯器).</p>
<p style="padding-left: 30px;">至於針對 Python 程式的"解譯"執行過程, 則<a href="https://www.geeksforgeeks.org/understanding-the-execution-of-python-program/">說明如下</a>:</p>
<p style="padding-left: 30px;">The next step involves converting the byte code (.pyc file) into machine code. This step is necessary as the computer can understand only machine code (binary code). Python Virtual Machine (PVM) first understands the operating system and processor in the computer and then converts it into machine code. Further, these machine code instructions are executed by processor and the results are displayed.</p>
<p style="padding-left: 30px;">However, the interpreter inside the PVM translates the program line by line thereby consuming a lot of time. To overcome this, a compiler known as Just In Time (JIT) is added to PVM. JIT compiler improves the execution speed of the Python program. This compiler is not used in all Python environments like CPython which is standard Python software.</p>
<p style="padding-left: 30px;">To execute the hello.cpython-39.pyc we can use the following command:</p>
<p style="padding-left: 60px;">Y:\tmp\python_ex&gt;python __pycache__\hello.cpython-39.pyc</p>
<p style="padding-left: 30px;">至於有關 python.exe 與 pythonw.exe 的差別, 則參見<a href="https://stackoverflow.com/questions/9705982/pythonw-exe-or-python-exe">這裡的說明</a>. 至於 SciTE 設定 python.properties 中, 使用 pythonw.exe -u 表示除了採非同步 (asynchronous) 執行模式外, 同時 force the stdout and stderr streams to be unbuffered; but has no effect on stdin.</p>
<h4 style="padding-left: 30px;">Python 解譯器的類別:</h4>
<p style="padding-left: 30px;">最早的 Python 解譯器以 C 程式語言編寫, 稱為 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a>, 以 Python 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/PyPy">Pypy</a>, 以 .NET 技術編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/IronPython">Ironpython</a>, 以 Java 編寫的 Python 解譯器稱為 <a href="https://en.wikipedia.org/wiki/Jython">Jython</a>, 以 Javascript 編寫的 Python 解譯器稱為 <a href="https://brython.info/">Brython</a>. 以 Rust 編寫的 Python 解譯器稱為 <a href="https://github.com/RustPython/RustPython">RustPython</a>.</p>
<h4 style="padding-left: 30px;">建立可攜 Python 程式環境的目的:</h4>
<p style="padding-left: 30px;">一般在 Windows 10 中使用 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 都是透過操作系統安裝, 將 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯器登錄在操作系統的 <a href="https://en.wikipedia.org/wiki/Windows_Registry">Registry</a> 中. 只不過配置在操作系統的 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯器若在使用過程中, 透過 <a href="https://pypi.org/project/pip/">pip</a> 安裝額外的模組後, 當電腦輔助設計室中的電腦重新開機後, 操作系統將會因為安裝防寫套件而恢復原先所安裝無額外模組的狀態.</p>
<p style="padding-left: 30px;">網際內容管理與協同產品設計實習課程為了<span style="background-color: #ffff99;">讓使用者可以隨身帶著 <a href="https://en.wikipedia.org/wiki/CPython" style="background-color: #ffff99;">CPython</a> 解譯器</span>, 因此繞過 Windows 10 操作系統的 Registry 登錄, 設法以批次檔案在虛擬的硬碟 (y:) 啟動 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 解譯環境.</p>
<p style="padding-left: 30px;">此外, 配置在 USB 隨身碟的可攜 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a> 程式環境, 除了可執行一般 Python 程式外, 也可自行安裝所需模組, 並用於 <a href="https://github.com/mdecourse/cmsimde">cmsimde</a> 動態與靜態網站編輯.</p>
<p style="padding-left: 30px;">可攜程式環境中除 <a href="https://en.wikipedia.org/wiki/CPython">CPython</a>, 還可配置 <a href="https://www.msys2.org/">MSYS2</a> C/C++ 編譯系統. 針對 <a href="https://www.scintilla.org/SciTE.html">SciTE</a>, <a href="https://github.com/solvespace/solvespace">Solvespace</a>, <a href="https://github.com/Range-Software/range3">Range3</a>, <a href="https://github.com/CoppeliaRobotics">CoppeliaSim</a> 等開源套件執行編譯.</p>
<h4>如何建立可攜 Python 程式環境?</h4>
<p style="padding-left: 30px;">能放入 USB 隨身碟執行的 Python 程式環境包含兩個部分:</p>
<p style="padding-left: 60px;">(1) Python 解譯器系統檔案</p>
<p style="padding-left: 60px;">(2) 可攜啟動設定批次檔 (例如: <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/start_ipv6.bat">start_ipv6.bat</a>)</p>
<p style="padding-left: 30px;">要在 Windows 操作系統中, 取得各版本的 Python 解譯器系統檔案, 也有兩種方法:</p>
<p style="padding-left: 60px;">(1) 從官方網站下載安裝檔 (例如: <a href="https://www.python.org/ftp/python/3.10.2/">3.10.2 版</a>的 <a href="https://www.python.org/ftp/python/3.10.2/python-3.10.2-amd64.exe">python-3.10.2-amd64.exe)</a>, 手動安裝 Python, 取下安裝內容後, 解除安裝程式.</p>
<p style="padding-left: 60px;">(2) 利用 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Eatd1g4iPyFFoZFlwR66DisBHx-fNimjugQ2svoXQJAWSQ?e=qrEmuR">gen_portable_python.py</a>, 從 Python 官方網站下載基本的 .msi 檔案 (例如 <a href="https://www.python.org/ftp/python/3.10.2/amd64/">3.10.2 版</a>中的 core.msi, dev.msi, exe.msi, lib.msi, tcltk.msi 與 tools.msi), 然後利用 <a href="https://docs.microsoft.com/zh-tw/windows-server/administration/windows-commands/msiexec">msiexec.exe</a> 配合 <a href="https://docs.microsoft.com/zh-tw/windows/win32/msi/targetdir">targetdir</a> 屬性解開各安裝檔.</p>
<p id="pp310">以下將要結合 <a href="https://www.scintilla.org/SciTE.html">SciTE</a>, <a href="https://github.com/TinyCC/tinycc">Tiny C Compiler</a> 與 <a href="https://www.python.org/ftp/python/3.10.2/">Python 3.10.2</a>, 建立一個可攜版的 CPython 與 <a href="https://en.wikipedia.org/wiki/ANSI_C">ANSI C</a> 執行環境.</p>
<ol>
<li>從 <a href="http://download.savannah.gnu.org/releases/tinycc/">http://download.savannah.gnu.org/releases/tinycc/</a> 下載 <a href="http://download.savannah.gnu.org/releases/tinycc/tcc-0.9.27-win64-bin.zip">tcc-0.9.27-win64-bin.zip</a>.</li>
<li>從 <a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 <a href="https://www.scintilla.org/wscite521.zip">wscite521.zip</a>.</li>
<li>利用 Python 3.9.5 (或先前的 Python3 舊版可攜程式) 執行 <a href="http://wcm.cycu.org:88/github/wcm2022_guide/downloads/gen_portable_python.py">gen_portable_python.py</a> 取得 Python310 解譯器系統檔案.</li>
<li>根據上述流程建立的基本 Python 與 ANSI C 可攜程式系統 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ETQ0bIB9Vs1CloTwDiqnMO0BV_SCXVQUmfPd3sANXqF1ZA?e=bpP7C0">Portable_py310_tcc.7z</a> (for @nfu users only, 此一 Python 解譯器只帶有基本模組且尚未安裝 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC">get-pip.py</a>)</li>
<li>此一 Python 解譯器以 python <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EUaDMWggjIZAiFSVjo-otN8BuZe0GpaAio4J_NRzz39tRA?e=9FhCRC">get-pip.py</a> 安裝 pip 後, 再以 pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl 安裝 <a href="https://mde.tw/cmstemplate/content/CMSiMDE.html">cmsimde 所需模組</a>後, 即可用於 wcm2022 動態與靜態系統的編輯.</li>
<li>此一 Python 解譯器再結合 <a href="https://git-scm.com/download/win">Portablegit</a> 與 <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">PUTTY</a>, 就可以支援以 <a href="https://mde.tw/wcm2022_guide/content/Token%20and%20SSH.html">SSH</a> 執行 github 倉儲的 git push.</li>
</ol>
<h4>如何建立網際 Python 程式環境 (Brython)?</h4>
<p style="padding-left: 30px;">例如: <a href="https://mde.tw/wcm2022_guide/content/run.html">run</a> 頁面.</p>
<p>從 <a href="https://drive.google.com/file/d/1TMPsHz6G01-pxkvXf9NFM8nFdtCHQv8D/view?usp=sharing">portable_python_wcm2022.7z</a> 下載的可攜程式環境有哪些功能?</p>
<p><span style="background-color: #ffff99;">請注意: 以下的 .7z 檔案下載, 只允許在系上網段上下載</span>.</p>
<ol>
<li><a href="http://wcm.cycu.org:88/compile_copsim_cd2022.7z">compile_copsim_cd2022.7z</a> (file size: 5 GB, extracted size: 17.3 GB, 包含除了 NX1980 之外的所有課程相關可攜程式套件, 是專門為 <a href="https://mde.tw/cd2022">cd2022</a> 課程學員打造的套件).</li>
<li><a href="http://wcm.cycu.org:88/portable_python_wcm2022.7z">portable_python_wcm2022.7z</a> (file size: 513 MB, extracted size: 2.3 G, 這是專門為 <a href="https://mde.tw/wcm2022">wcm2022</a> 課程打造的可攜程式套件, 適合選修學員下載後在任何 Windows 10 中以隨身碟啟動後操作)</li>
<li><a href="http://wcm.cycu.org:88/drive.7z">drive.7z</a> (file size: 2.6 MB, extracted size: 10 MB, 只包含 PUTTY, tcc, wscite 與 tmp 目錄, 採用 Hybrid 方式設定, 可與目前電腦輔助設計室中 SSD 硬碟所安裝的 Python 3.9.5 與 <a href="https://git-scm.com/download/win">Portablegit</a> 結合, 使用者只需自行設定啟動後的 home_ipv6 目錄與 home_ipv6/Desktop 目錄後即可以最輕薄便捷的方式將 SSH key 存入隨身碟, 並將個人與分組倉儲存入隨身碟啟動後的 tmp 目錄進行操作).</li>
</ol>
<p>以下利用 Wink3 影片說明以 Hybrid 方式啟動的 USB 隨身碟如何建立? 以及使用上與完整 USB 隨身碟可攜程式系統的差別:</p>
<p>Hybrid 可攜程式系統是只將必要檔案配置到 USB 隨身碟, 其餘檔案則使用已經存在電腦上的內容, 主要包含 Python 3.9.5 解譯程式 (863 MB) 與 Portblegit 2.31.1 (285 MB).</p>
<p>Hybrid 可攜程式系統優點:</p>
<ol>
<li>初始 USB 隨身碟只需複製 10.5 MB 的資料 (只自帶 PUTTY (4.3 MB), tcc (1.7 MB), tmp 與 wscite (4.3 MB)).</li>
<li>使用電腦 SSD 上所安裝的 Python 與 Portablegit, 執行速度會比一般 USB 隨身碟快.</li>
</ol>
<p>Hybrid 可攜程式系統缺點:</p>
<ol>
<li>在未修改 Python Script 目錄中的 .exe 可執行檔之前, 必須透過 .py 執行, 例如: 命令列 中輸入 leo 並無法執行執行, 必須採用 import leo.core.runLeo;leo.core.runLeo.run()</li>
<li>若在裝有還原卡的電腦, 未修改 Python 系統模組路徑之前, 所安裝的額外模組無法放入 USB 隨身碟中.</li>
</ol><h2>Brython</h2>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
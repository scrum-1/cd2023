<h1>About</h1>
<p>本課程為協同產品設計實習, 每週上課時數為 4 小時, 其中兩小時為教學時段, 另兩小時為實習時段, 課程內容包含 Programming 與 Computer aided Design 等兩大部分.</p>
<p>Programming 部分包含計算機程式與網際內容管理等課程的內容: Brython, Python, Lua 與 C/C++ 等程式的編寫與 Github 整合應用.</p>
<p>Computer aided Design 部分包含電腦輔助設計與實習課程的內容: Solvespace, Siemens NX, Onshape, CoppeliaSim 與 Webots 等套件的應用.</p>
<p>課程評分: 出席, 線上測驗, 協同專案與自我評量.</p>
<p>前導課程: <a href="https://mde.tw">https://mde.tw</a></p>
<p>倉儲: <a href="https://github.com/mdecycu/cd2023">https://github.com/mdecycu/cd2023</a></p>
<p>網站: <a href="https://mde.tw/cd2023">https://mde.tw/cd2023</a></p>
<p>本課程將採兩人一組、四人一組與八人一組的方式進行協同機電整合產品開發.</p>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Motivation</h2>
<p>學習協同產品設計與實習課程的動機.</p>
<p>教導或學習協同產品設計實習的過程, 必須自問學這東西有用嗎? 您自己(平時, 一直)使用嗎?</p>
<h2>Projects</h2>
<p>二甲: w2 and w7 放假</p>
<p>二乙: w7 and w18 放假</p>
<p>w1-w5: 兩人一組, 自選產品, 以抽點方式在 w4 現場發表兩人協同四週後所完成的產品, 在 w5 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 1 得分？)</p>
<p>w6-w10: 四人一組, 自選產品, 以抽點方式在 w10 現場發表兩人協同四週後所完成的產品, 在 w11 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 2 得分？)</p>
<p>w11-w17: 八人一組, 自選產品, 以抽點方式在 w16 現場發表兩人協同四週後所完成的產品, 在 w17 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 3 得分？)</p>
<p>Test modules: 於 w4, w11 與 w16 各組必須針對協同專案執行過程所需了解的議題, 製作符合 TCExam 格式的考試題目, 每人至少五題, 每一題各有至少 5 個正確敘述與 5 個錯誤敘述.</p>
<p>TCExam tests: 於 w5, w12 與 w17 舉行.</p><h2>Web-based</h2>
<p>Front-end 使用瀏覽器, Back-end 使用 WWW server 進行機電資協同產品開發</p>
<p><a href="https://link.springer.com/chapter/10.1007/1-84628-088-5_1">Creating Web-based Laboratory</a> (2004)</p>
<p><a href="https://link.springer.com/book/10.1007/978-90-481-2505-0">Web-based Control and Robotics Education</a> (2009)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2710-7">Learning Web-based Virtual Reality</a> (2017)</p><h2>Blender</h2>
<p><a href="https://www.blender.org/">https://www.blender.org/</a></p>
<p>Blender history: <a href="https://www.blender.org/about/history/">https://www.blender.org/about/history/</a></p>
<p>Blender on Github: <a href="https://github.com/blender">https://github.com/blender</a></p>
<p>Ebooks on Springer:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-2802-9">The Blender Python API</a> (2017)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-3127-1">Beginning Blender</a> (2010)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6415-7">Core Blender Development</a> (2021)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5340-3">Modeling and Animation using Blender</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6174-3">Creating Game Environment in Blender 3D</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-7954-0">Introduction to Blender 3.0</a> (2022)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-1977-4">Foundation Blender Compositing</a> (2009)</p>
<p>機械設計工程師能拿 Blender 做甚麼?</p>
<p style="padding-left: 30px;"><a href="https://workwut.com/mechanical-engineers-blender/">https://workwut.com/mechanical-engineers-blender/</a></p>
<p style="padding-left: 30px;"><a href="https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering">https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/AD_jyBN09jA">https://youtu.be/AD_jyBN09jA</a></p>
<p style="padding-left: 30px;"><a href="https://blendergrid.com/learn/articles/tyler-disney-interview">https://blendergrid.com/learn/articles/tyler-disney-interview</a></p><h2>Ref</h2>
<p>2014</p>
<p style="padding-left: 30px;"><a href="https://github.com/coursemdetw?tab=repositories">https://github.com/coursemdetw?tab=repositories</a> </p>
<p style="padding-left: 30px;">2014 cp: <a href="https://vimeo.com/115314619">https://vimeo.com/115314619</a></p>
<p style="padding-left: 30px;"><a href="https://vimeo.com/user24079973">https://vimeo.com/user24079973</a> </p>
<p>2015</p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw?tab=repositories">https://github.com/2015fallhw?tab=repositories</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw/cdw2">https://github.com/2015fallhw/cdw2</a> </p>
<p style="padding-left: 30px;"><a href="https://2015cdg11.wordpress.com/">https://2015cdg11.wordpress.com/</a> </p>
<p>2017</p>
<p style="padding-left: 30px;"><a href="https://40423245.github.io/2017springcd_hw/blog/pages/about/">https://40423245.github.io/2017springcd_hw/blog/pages/about/</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos</a> </p>
<p>2018</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecadp2018">https://github.com/mdecadp2018</a> </p>
<p style="padding-left: 30px;"><a href="https://scrum-1.gitbooks.io/cd2018/content/cd.html">https://scrum-1.gitbooks.io/cd2018/content/cd.html</a> </p>
<p style="padding-left: 30px;"><a href="https://www.ithome.com.tw/news/125308">https://www.ithome.com.tw/news/125308</a> </p>
<p>2019</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdekmol">https://github.com/mdekmol</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/cd2019a">https://github.com/scrum-1/cd2019a</a>  </p>
<p>2020</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2020">https://gitter.im/mdecourse/cad2020</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2020">https://gitter.im/mdecourse/cd2020</a> </p>
<p>2021</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2021">https://gitter.im/mdecourse/cp2021</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2021">https://gitter.im/mdecourse/cad2021</a></p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/videos">https://www.youtube.com/@user-yb6kb6je7f/videos</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/playlists">https://www.youtube.com/@user-yb6kb6je7f/playlists</a> </p>
<p style="padding-left: 30px;"></p><h1>NX2027</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EW0eW8fnq2lAtCNHD6r6zqQBeJ-eqkROCzE7RpBM9-PCmw?e=rq94Li"> NX2027.3401_lite_cad2022.7z</a> for @nfu</p><h2>NX Server</h2>
<p>Web based NX2027 Server</p>
<h1>Onshape</h1>
<p><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<p>如何在 Web-based 環境, 讓 human 與 machine 能夠在<a href="https://cad.onshape.com/documents/f942bc02bd60de603095cd9d/w/e3af941ed5245875e39138d0/e/af657625f78911e9e727c91a?renderMode=0&amp;uiState=638ff3d8cac9b5791419b89c">手足球檯</a>上對陣, 且進球後以最快的方式回到球場.</p>
<p><img caption="false" height="326" src="/images/onshape_foosball_table.png" width="600"/></p>
<h1>Solvespace</h1>
<p><a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a></p>
<p><a href="https://solvespace.com/forum.pl">Solvespace Forum</a></p>
<h1>CoppeliaSim</h1>
<p><a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<h1>Webots</h1>
<p><a href="https://www.cyberbotics.com">https://www.cyberbotics.com</a></p>
<p><a href="https://webots.cloud/">https://webots.cloud/</a></p>
<h1>Brython</h1>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
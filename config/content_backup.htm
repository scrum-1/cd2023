<h1>About</h1>
<p>本課程為協同產品設計實習, 每週上課時數為 4 小時, 其中兩小時為教學時段, 另兩小時為實習時段, 課程內容包含 Programming 與 Computer aided Design 等兩大部分.</p>
<p>Programming 部分包含計算機程式與網際內容管理等課程的內容: Brython, Python, Lua 與 C/C++ 等程式的編寫與 Github 整合應用.</p>
<p>Computer aided Design 部分包含電腦輔助設計與實習課程的內容: Solvespace, Siemens NX, Onshape, CoppeliaSim 與 Webots 等套件的應用.</p>
<p>課程評分: 出席, 線上測驗, 協同專案與自我評量.</p>
<p>前導課程: <a href="https://mde.tw">https://mde.tw</a></p>
<p>倉儲: <a href="https://github.com/mdecycu/cd2023">https://github.com/mdecycu/cd2023</a></p>
<p>網站: <a href="https://mde.tw/cd2023">https://mde.tw/cd2023</a></p>
<p>本課程將採兩人一組、四人一組與八人一組的方式進行協同機電整合產品開發.</p>
<p>行事曆</p>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>Motivation</h2>
<p>學習協同產品設計與實習課程的動機.</p>
<p>產品設計 (design) 與產品開發 (development) 有何區別？</p>
<p style="padding-left: 30px;"><a href="https://uk.indeed.com/career-advice/career-development/design-vs-development">https://uk.indeed.com/career-advice/career-development/design-vs-development</a> </p>
<p>教導或學習協同產品設計實習的過程, 必須自問學這東西有用嗎? 您自己 (平時, 一直) 使用嗎?</p>
<p>讓我們回到 2012 年, review 一下 Collaborative Product Development 有關的文獻:</p>
<p><a href="https://www.tandfonline.com/doi/full/10.1080/09537287.2010.543169">2012 - Collaborative Product Development - a literature overview</a> (<a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/Eg8gxUiqKM9EjQ1pau4MFnEBXDoqXpvloqDqwoj0o4wWJw?e=ewZV4G">in png </a>for @nfu users only)</p>
<p style="padding-left: 30px;">In a market where competitive pressures surround the industry, organisations face the demand for customised solutions (客製化解題方案), high-quality products, short time-to-market and lower costs.</p>
<p style="padding-left: 30px;">To ensure survival and continued prosperity, businesses must meet these challenges by providing a constant stream (源源不斷) of new and improved products, processes and services. Product Development and innovation emerges consequently as a key process of competition and sustainability (永續).</p>
<p style="padding-left: 30px;">Inter-firm collaborations emerge in order to share product development risks (風險) and costs as well as shorten time-to-market and obtain additional benefits, such as reducing research and development (R&amp;D, 研發) costs, increasing market share and exchanging expertise.</p>
<p style="padding-left: 30px;">Collaborative product development, in brief, can be defined as a collaborative process overlapping (重疊) with the product development process.</p>
<p style="padding-left: 30px;">The existing literature is analysed in three groups (CPD dynamics, partnership formation (夥伴關係組成) in CPD and CPD infrastructure)</p>
<p style="padding-left: 30px;">CPD is "any activity where two (or more) partners contribute differential (不同) resources and know how to agree complementary (互補) aims in order to design and develop a new or improved product"</p>
<p style="padding-left: 30px;">By combining the strength and expertise of the best diverse and geographically dispersed product development teams, better mission scenarios, designs and the corresponding products and technologies can be developed in less time.</p>
<p style="padding-left: 30px;">Applications of Collaborative Product Development include <a href="https://www.entrepreneur.com/starting-a-business/the-5-types-of-business-networking-organizations/302630">networks of companies</a> (拓展公司間成員關係與連結的組織, <a href="https://en.wikipedia.org/wiki/Business_network">business network</a>), <a href="https://www.indeed.com/career-advice/career-development/virtual-organization">virtual organisations</a>, <a href="https://www.thomasnet.com/insights/supplier-collaboration/">customer–supplier collaboration</a>, <a href="https://en.wikipedia.org/wiki/Extended_enterprise">extended (manufacturing) enterprises</a> (延伸企業), <a href="https://www.emerald.com/insight/content/doi/10.1108/JIUC-06-2019-0012/full/pdf?title=the-impact-of-collaboration-network-on-new-product-development-evidence-from-the-automobile-industry-of-china">dynamic networks</a>, <a href="https://harappa.education/harappa-diaries/strategic-alliance-meaning-examples-and-types/">strategic alliances</a> (策略聯盟)and  <a href="https://www.investopedia.com/terms/j/jointventure.asp">joint ventures</a> (合資企業).</p>
<p>同時也看看 <a href="https://www.netsolutions.com/insights/why-collaborative-design-to-build-products/">Why you should pursue collaborative design to build products</a> 以及 <a href="https://collaboration.fandom.com/wiki/Collaborative_product_development">CPD 介紹</a>.</p>
<p style="padding-left: 30px;">Collaborative design involves bringing together a diverse group of people from different backgrounds and industries to work together and generate new ideas. By leveraging (運用) this diverse group’s (多元群組間) unique perspectives and expertise, creating truly unique and effective solutions is possible.</p>
<p style="padding-left: 30px;">An architect (架構師) will think of the software architecture, a designer (設計者) will have an idea of how to make the product usable (能想出方法讓產品可用), the developer (開發者) will know whether the proposed design is feasible (知道提出的設計是否可行), and the stakeholders (股東) will have opinions around the product design to make it invest worthy (確定該產品設計值得投資). Overall, the experience design process is a collaborative initiative undertaken by a product development company, not a one-person or one-team job.</p>
<p style="padding-left: 30px;">Collaborative design typically involves a series of meetings and workshops where stakeholders (利益相關者) can share their ideas and discuss potential solutions to the problems being addressed by the product. This approach ensures that the final product is well-designed, effective, and meets the needs of all stakeholders.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET31veETWFlCiVKtit_5iUoBeVaqndXrPK63zp_hSW3qBg?e=bLEulA">2016 A Framework of Cloud-based Collaborative Platform to Integrate Product Design Requests and Contradiction Analysis</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EduI6ah3kshBgUYfsheMRmYBbcgpKqv52G1SrheoIRZpNA?e=qVTN9B">2017 A Strategic Planning of TRIZ Applications for Cloud-based Collaborative Product Development</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EdBrqxY0LetMvE3_eDgXI2AB19x2ES8byteUrzz7uI3Kyg?e=eHvmx3">2023 Beginner’s Guide to Streamlit with Python</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"><a href="https://streamlit.io">https://streamlit.io</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWOCmilOKM5GncPk82VFsFEBtEwDjvUvXry38NUVUSGiGQ?e=Xa4s3n">2023 Productionizing AI</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETNFWRRktx5EqcB5SCDwKgQBmHD7QuYvwoRksOJcC_WrZA?e=gNGvgl">2023 Industrial Robotics Control Mathematical Models, Software Architecture, and Electronics Design</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETeyIZKK_P1DrahywPaTU7oBCpmfQgKHYFxZPF2lzQSIgA?e=EQCFxV">2023 Computational Mechanics with Deep Learning An Introduction</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EUkEjHFiy4dHqVreKpMnMT0BfKvEik6I8FVoMS3DF591fg?e=7hpjZx">2001 Introduction to Physical Modeling with Modelica</a> (for @nfu users only)</p>
<p><a href="https://ep.liu.se/ecp/096/127/ecp14096127.pdf">Modelica model for a youbot manipulator</a></p>
<p style="padding-left: 30px;"><a href="https://openmodelica.org/doc/OpenModelicaUsersGuide/OpenModelicaUsersGuide-latest.pdf">OpenModelica User Guide</a></p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/Eb4qE-RpYmFDt76J3BA1BswBvk_fxn-zs82ysR-pJKo5Qw?e=NZ4Ul1">The OpenModelica Integrated Modeling, Simulation and Optimization Environment</a></p>
<p></p><h2>Reading</h2>
<p><a href="https://www.tandfonline.com/doi/full/10.1080/09537287.2010.543169">2012 - Collaborative Product Development - a literature overview</a> (<a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/yen_nfu_edu_tw/Eg8gxUiqKM9EjQ1pau4MFnEBXDoqXpvloqDqwoj0o4wWJw?e=ewZV4G">in png </a>for @nfu users only)</p>
<p style="padding-left: 30px;">這是一篇長達 20 頁, 有關協同產品開發的文獻探討與概述, 其中牽涉許多與產品開發流程及國際大環境下企業競爭常見的專業用詞 (Terminology), 非常適合機械設計工程師仔細閱讀. 從中可以了解在目前機電資 (Infomechatronic) 與虛實整合 (Cyber-Physical Integration) 產品開發模式下, 每一個參與協同設計的成員或團隊, 除了必須專注在自己的專業領域外, 對於時間與機會成本的掌控, 採行方案的永續性, 理念與創意的展示方法, 以及對於跨領域知識的涉獵, 都是未來進入產業之前就必須要在心態與身體力行中, 不斷調整歷練與實踐.</p>
<p><a href="https://www.netsolutions.com/insights/why-collaborative-design-to-build-products/">Why you should pursue collaborative design to build products</a> 以及 <a href="https://collaboration.fandom.com/wiki/Collaborative_product_development">CPD 介紹</a>.</p>
<p style="padding-left: 30px;">在軟體開發界, 經常會有所謂研究者, 架構師, 開發者與設計者等不同專業任務分工, 其中研究者負責廣泛涉獵各種技術的應用, 架構師則主導公司產品開發的大方向與所採行的技術細節, 開發者則承接架構師所賦予的產品開發任務, 設法找出可行的產品開發方案, 其中包括規劃及管理與產品開發有關的市場導向, 期程與成本規劃等專案細節, 以便讓設計者根據專案計畫中的細項, 解決各種產品開發所面臨的問題.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ET31veETWFlCiVKtit_5iUoBeVaqndXrPK63zp_hSW3qBg?e=bLEulA">2016 A Framework of Cloud-based Collaborative Platform to Integrate Product Design Requests and Contradiction Analysis</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EduI6ah3kshBgUYfsheMRmYBbcgpKqv52G1SrheoIRZpNA?e=qVTN9B">2017 A Strategic Planning of TRIZ Applications for Cloud-based Collaborative Product Development</a> (for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EdBrqxY0LetMvE3_eDgXI2AB19x2ES8byteUrzz7uI3Kyg?e=eHvmx3">2023 Beginner’s Guide to Streamlit with Python</a> (for @nfu users only)</p>
<p style="padding-left: 30px;"></p><h2>Projects</h2>
<p>二甲: w2 and w7 放假</p>
<p>二乙: w7 and w18 放假</p>
<p>主題: 開發一款能在 web-based CoppeliaSim 場景中雙方或多方 (human or computer) 對玩的遊戲 (game) 產品.</p>
<p>w1-w5: 兩人一組, 自選產品, 以抽點方式在 w4 現場發表兩人協同四週後所完成的產品, 在 w5 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 1 得分？)</p>
<p>w6-w10: 四人一組, 自選產品, 以抽點方式在 w10 現場發表兩人協同四週後所完成的產品, 在 w11 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 2 得分？)</p>
<p>w11-w17: 八人一組, 自選產品, 以抽點方式在 w16 現場發表兩人協同四週後所完成的產品, 在 w17 各組採 OBS + Teams 以影片發表所完成的協同產品. (<a href="https://www.youtube.com/watch?v=8aKqcJDMvOI">參考資料</a>)</p>
<p style="padding-left: 30px;">請各組設法直接利用網路工具, 分別對各組互相評分, 列出評分項目與具體依據後, 依照各組總評分排序. (該如何評分？如何排序? 如何對所有成員給定 Project 3 得分？)</p>
<p>Test modules: 於 w4, w11 與 w16 各組必須針對協同專案執行過程所需了解的議題, 製作符合 TCExam 格式的考試題目, 每人至少五題, 每一題各有至少 5 個正確敘述與 5 個錯誤敘述.</p>
<p>TCExam tests: 於 w5, w12 與 w17 舉行.</p><h2>Web-based</h2>
<p>Front-end 使用瀏覽器, Back-end 使用 WWW server 進行機電資協同產品開發</p>
<p><a href="https://link.springer.com/chapter/10.1007/1-84628-088-5_1">Creating Web-based Laboratory</a> (2004)</p>
<p><a href="https://link.springer.com/book/10.1007/978-90-481-2505-0">Web-based Control and Robotics Education</a> (2009)</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4842-2710-7">Learning Web-based Virtual Reality</a> (2017)</p><h2>Blender</h2>
<p><a href="https://www.blender.org/">https://www.blender.org/</a></p>
<p>Blender history: <a href="https://www.blender.org/about/history/">https://www.blender.org/about/history/</a></p>
<p>Blender on Github: <a href="https://github.com/blender">https://github.com/blender</a></p>
<p>Ebooks on Springer:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-2802-9">The Blender Python API</a> (2017)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-3127-1">Beginning Blender</a> (2010)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6415-7">Core Blender Development</a> (2021)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-5340-3">Modeling and Animation using Blender</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6174-3">Creating Game Environment in Blender 3D</a> (2020)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-7954-0">Introduction to Blender 3.0</a> (2022)</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4302-1977-4">Foundation Blender Compositing</a> (2009)</p>
<p>機械設計工程師能拿 Blender 做甚麼?</p>
<p style="padding-left: 30px;"><a href="https://workwut.com/mechanical-engineers-blender/">https://workwut.com/mechanical-engineers-blender/</a></p>
<p style="padding-left: 30px;"><a href="https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering">https://blender.stackexchange.com/questions/53293/is-blender-actually-useable-for-engineering</a></p>
<p style="padding-left: 30px;"><a href="https://youtu.be/AD_jyBN09jA">https://youtu.be/AD_jyBN09jA</a></p>
<p style="padding-left: 30px;"><a href="https://blendergrid.com/learn/articles/tyler-disney-interview">https://blendergrid.com/learn/articles/tyler-disney-interview</a></p><h2>Ref</h2>
<p>2014</p>
<p style="padding-left: 30px;"><a href="https://github.com/coursemdetw?tab=repositories">https://github.com/coursemdetw?tab=repositories</a> </p>
<p style="padding-left: 30px;">2014 cp: <a href="https://vimeo.com/115314619">https://vimeo.com/115314619</a></p>
<p style="padding-left: 30px;"><a href="https://vimeo.com/user24079973">https://vimeo.com/user24079973</a> </p>
<p>2015</p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw?tab=repositories">https://github.com/2015fallhw?tab=repositories</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/2015fallhw/cdw2">https://github.com/2015fallhw/cdw2</a> </p>
<p style="padding-left: 30px;"><a href="https://2015cdg11.wordpress.com/">https://2015cdg11.wordpress.com/</a> </p>
<p>2017</p>
<p style="padding-left: 30px;"><a href="https://40423245.github.io/2017springcd_hw/blog/pages/about/">https://40423245.github.io/2017springcd_hw/blog/pages/about/</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos">https://www.youtube.com/channel/UCJ0Ye3mhMApH0yxAcwCXs5g/videos</a> </p>
<p>2018</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecadp2018">https://github.com/mdecadp2018</a> </p>
<p style="padding-left: 30px;"><a href="https://scrum-1.gitbooks.io/cd2018/content/cd.html">https://scrum-1.gitbooks.io/cd2018/content/cd.html</a> </p>
<p style="padding-left: 30px;"><a href="https://www.ithome.com.tw/news/125308">https://www.ithome.com.tw/news/125308</a> </p>
<p>2019</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdekmol">https://github.com/mdekmol</a> </p>
<p style="padding-left: 30px;"><a href="https://github.com/scrum-1/cd2019a">https://github.com/scrum-1/cd2019a</a>  </p>
<p>2020</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2020">https://gitter.im/mdecourse/cp2020</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2020">https://gitter.im/mdecourse/cad2020</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2020">https://gitter.im/mdecourse/cd2020</a> </p>
<p>2021</p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cp2021">https://gitter.im/mdecourse/cp2021</a> </p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cad2021">https://gitter.im/mdecourse/cad2021</a></p>
<p style="padding-left: 30px;"><a href="https://gitter.im/mdecourse/cd2021">https://gitter.im/mdecourse/cd2021</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/videos">https://www.youtube.com/@user-yb6kb6je7f/videos</a> </p>
<p style="padding-left: 30px;"><a href="https://www.youtube.com/@user-yb6kb6je7f/playlists">https://www.youtube.com/@user-yb6kb6je7f/playlists</a> </p>
<p style="padding-left: 30px;"></p><h1>NX2027</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EW0eW8fnq2lAtCNHD6r6zqQBeJ-eqkROCzE7RpBM9-PCmw?e=rq94Li"> NX2027.3401_lite_cad2022.7z</a> for @nfu</p><h2>NX Server</h2>
<p>Web based NX2027 Server</p>
<h1>Onshape</h1>
<p><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<p>如何在 Web-based 環境, 讓 human 與 machine 能夠在<a href="https://cad.onshape.com/documents/f942bc02bd60de603095cd9d/w/e3af941ed5245875e39138d0/e/af657625f78911e9e727c91a?renderMode=0&amp;uiState=638ff3d8cac9b5791419b89c">手足球檯</a>上對陣, 且進球後以最快的方式回到球場.</p>
<p><img caption="false" height="326" src="/images/onshape_foosball_table.png" width="600"/></p>
<h1>Solvespace</h1>
<p><a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a></p>
<p><a href="https://solvespace.com/forum.pl">Solvespace Forum</a></p>
<h1>CoppeliaSim</h1>
<p><a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a></p>
<h1>Webots</h1>
<p><a href="https://www.cyberbotics.com">https://www.cyberbotics.com</a></p>
<p><a href="https://webots.cloud/">https://webots.cloud/</a></p>
<h1>Brython</h1>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>